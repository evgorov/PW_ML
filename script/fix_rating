#!/usr/bin/ruby
# encoding: utf-8

libdir = File.join(File.dirname(__FILE__), '../lib')
$LOAD_PATH.unshift(libdir) unless $LOAD_PATH.include?(libdir)

require 'storage'
require 'user_factory'
require 'model/user'
require 'model/user_data'
require 'model/user_score'

redis = Redis.new
current_year, current_month = Time.now.year, Time.now.month

# fix month_score
UserData.storage(redis).all_in_batches do |ud|
  score = UserScore.storage(redis).scores_for(ud.id).select { |o| t = Time.parse(o['created_at']); t.year == current_year && t.month == current_month }.map {|o| o['score'] }.inject(&:+).to_i

  ud.inc_month_score(score - ud['month_score'])
end

# fix solved count
UserData.storage(redis).all_in_batches do |ud|
  solved = UserScore.storage(redis).scores_for(ud.id).select { |o| t = Time.parse(o['created_at']); t.year == current_year && t.month == current_month }.map {|o| o['solved'] }.inject(&:+).to_i

  ud['solved'] =  solved
  ud.save
end


# fix rating
UserData.storage(redis).all_in_batches do |ud|
  print '.'
  ud.save
end
